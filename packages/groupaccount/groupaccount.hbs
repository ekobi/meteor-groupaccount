[![Build Status](https://travis-ci.org/ekobi/meteor-groupaccount.svg?branch=master)](https://travis-ci.org/ekobi/meteor-groupaccount)
# groupaccount
Use the `groupaccount` packages to provide qualified access to a single Meteor account from one or more sets of credentials:

1. [`groupaccount`](https://atmospherejs.com/verody/groupaccount) - Provides the core, server-side functionality, along with some client-side wrappers and helpers.
2. [`groupaccount-signin`](https://atmospherejs.com/verody/groupaccount-signin) - Provides an unstyled, reactive signin UI template
3. [`groupaccount-manager`](https://atmospherejs.com/verody/groupaccount-manager) - Provides an unstyled, reactive management UI template

## Some helpful definitions

- **`accountSelector`** : a globally-unique identifier for the account. Associated with a single `Meteor.user`
- **`memberSelector`** : locally-unique identifier for someone allowed to read/write some or all data associated with the group

## Usage

Add the package thus:

```
meteor add verody:groupaccount
```

## Examples

Callback functions for the `GroupAccounts.*` methods all have the same signature and return semantics:

```
        var params = {
            accountAdminPassword: 'thisIsASeriousPassword',
            accountSelector: 'joes-group-account',
            accountAdminEmail: 'joes-group@example.com'
        };
        GroupAccounts.createAccount (params, function (err,res) {
            //
            // err is undefined on successful invocation.
            // res is the Meteor.userId for the new account.
            console.log ('[groupaccount test createAccount CB]', res, err);
        });
```

The callback for Meteor.loginWithGroupAccount follows the convention for the Meteor.loginWith* methods:

```
        var params = {
            accountSelector: 'joes-group-account',
            memberSelector: 'admin',
            memberPassword: 'thisIsASeriousPassword'
        };

        Meteor.loginWithGroupAccount (params, function (err) {
            //
            // err is undefined on successful invocation.
            console.log ('[groupaccount test loginWithGroupAccount CB]', err);
        });

```

Also, take a look at the [`examples on github`](https://github.com/ekobi/meteor-groupaccount/tree/master/examples/groupaccount-bs3). And there may be [`a live demo running here.`](http://groupaccount.meteor.com)

## Pipeline
- **member roles** to facilitate access control to portions of the `Meteor.user()` data.

* * *
## API Reference
{{#module name="groupaccount"}}
{{>body}}
{{>member-index~}}
{{>separator~}}
{{>members~}}
{{/module}}
* * *
&copy; 2015-2016 Verody, LLC.
